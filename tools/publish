#! /usr/bin/env bash
# -*- coding: utf-8 -*-
#
# This file is part of pyunicorn.
# Copyright (C) 2008--2019 Jonathan F. Donges and pyunicorn authors
# URL: <http://www.pik-potsdam.de/members/donges/software>
# License: BSD (3-clause)
#
# Please acknowledge and cite the use of this software and its authors
# when results are used in publications or published elsewhere.
#
# You can use the following reference:
# J.F. Donges, J. Heitzig, B. Beronov, M. Wiedermann, J. Runge, Q.-Y. Feng,
# L. Tupikina, V. Stolbova, R.V. Donner, N. Marwan, H.A. Dijkstra,
# and J. Kurths, "Unified functional network and nonlinear time series analysis
# for complex systems science: The pyunicorn package"


# default configuration
build_ext=1
generate_html=1
generate_pdf=1
delete_git=1
dest=""
python="$(which python3)"

# evaluate arguments
if !(( $# == 0 || $# == 4 || $# == 5 )); then
    echo "Expecting 0, 4 or 5 arguments:"
    echo "   [build_ext generate_html generate_pdf delete_git] [dest]"
    echo "    (bool)    (bool)        (bool)       (bool)      (file)"
    exit 1
fi; if (( $# >= 4 )); then
    build_ext=$((     $1 && $build_ext ))
    generate_html=$(( $2 && $generate_html ))
    generate_pdf=$((  $3 && $generate_pdf ))
    delete_git=$((    $4 && $delete_git ))
fi; if (( $# == 5 )); then dir="$(dirname $5)"
    [[ ! -d $dir ]] && echo "Could not find directory: "$dir && exit 1
    [[ ${5: -7} != ".tar.gz" ]] && echo "Suffix should be '.tar.gz'." && exit 1
    dir="$(cd $dir && pwd)"; dest=$dir/"$(basename $5)"
fi

# determine absolute path of repository
repo="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"; cd $repo
[[ -n $dest && $dir != ${dir#$repo} ]] && \
    echo "Destination should be outside of repository." && exit 1

# construct versioned archive name
version="$(sed -n "s/^__version__ = '\([[:digit:]]\..*\)'$/\1/p" setup.py)"
[[ -z $version ]] && echo "Could not determine package version." && exit 2
package="pyunicorn-"$version; archive=$package".tar.gz"
[[ -z $dest ]] && dest="$(cd .. && pwd)"/$archive

# copy source
tmp=$dest"-tmp"; rm -rf $dest $tmp; mkdir -p $tmp
cp -a $repo $tmp/$package; cd $tmp/$package

# build extensions & docs
(( $generate_html + $generate_pdf )) && build_ext=1
(( $build_ext ))     && $python setup.py build_ext --inplace
cd docs; make clean > /dev/null
(( $generate_html )) && make html
(( $generate_pdf ))  && make latex && make latexpdf > /dev/null
cd ..

# clean up
(( $delete_git )) && rm -rf .git*
(( $build_ext ))  || find . -type f -regex ".*/numerics.c" -print | xargs rm -f
rm -rf build dist tools .cache .tox .travis.yml MANIFEST
find . -type f -regex ".*\.\(py[cod]\|o\|so\|data\)" -print | xargs rm -f
find . -type d -regex ".*\(pycache\|egg-info\|ipynb\|ropeproject\).*" -print \
    | xargs rm -rf

# compress
echo; echo "---------------------------------------------------------------"
echo "Writing package to: "$dest
cd $tmp; tar -czf $dest $package; cd ..; rm -rf $tmp
